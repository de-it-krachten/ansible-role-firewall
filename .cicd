---

# Generic
generic:
  org: deitkrachten
  role: ansible-role-firewall
  role_short: firewall
  role_description: |
    <put description in .cicd.overwrite>

# Dependencies
dependencies:
  roles: []
  collections: []

# Supported platforms
platforms:
  rhel7:
    name: Red Hat Enterprise Linux 7
    ci: false
    supported: false
    galaxy:
      name: EL
      version: 7
    molecule:
      docker:
        image: "registry.access.redhat.com/ubi7/ubi-init:latest"
        pre_build_image: false
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "registry.access.redhat.com/ubi7/ubi-init:latest"
        pre_build_image: false
  rhel8:
    name: Red Hat Enterprise Linux 8
    ci: false
    supported: true
    galaxy:
      name: EL
      version: 8
    molecule:
      docker:
        image: "registry.access.redhat.com/ubi8/ubi-init:latest"
        pre_build_image: false
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "registry.access.redhat.com/ubi8/ubi-init:latest"
        pre_build_image: false
  rhel9:
    name: Red Hat Enterprise Linux 9
    ci: false
    supported: true
    galaxy:
      name: EL
      version: 9
    molecule:
      docker:
        image: "registry.access.redhat.com/ubi9/ubi-init:latest"
        pre_build_image: false
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "registry.access.redhat.com/ubi9/ubi-init:latest"
        pre_build_image: false
  centos7:
    name: CentOS 7
    ci: false
    supported: false
    galaxy:
      name: EL
      version: 7
    github:
      runs_on: "ubuntu-20.04"
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-centos7-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-centos7-ansible:latest"
        pre_build_image: true
        privileged: false
      vagrant:
        box: "generic/centos7"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: centos-7
        server_type: cx11
  centos8:
    name: CentOS 8
    ci: false
    supported: false
    galaxy:
      name: EL
      version: 8
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-centos8-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-centos8-ansible:latest"
      vagrant:
        box: "generic/centos8"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  centos8s:
    name: CentOS Stream 8
    ci: false
    supported: false
    galaxy:
      name: EL
      version: 8
    molecule:
      docker:
        image: "docker.io/dropveter/centos8s-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/centos8s-ansible:latest"
      vagrant:
        box: "generic/centos8s"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: centos-stream-8
        server_type: cx11
  centos9s:
    name: CentOS Stream 9
    ci: false
    supported: false
    galaxy:
      name: EL
      version: 9
    molecule:
      docker:
        image: "docker.io/dropveter/centos9s-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/centos9s-ansible:latest"
      vagrant:
        box: "generic/centos9s"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: centos-stream-9
        server_type: cx11
  rockylinux8:
    name: RockyLinux 8
    ci: true
    supported: true
    galaxy:
      name: EL
      version: 8
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-rockylinux8-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-rockylinux8-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:ro
      vagrant:
        box: "generic/rocky8"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: rocky-8
        server_type: cx11
  rockylinux9:
    name: RockyLinux 9
    ci: true
    supported: true
    galaxy:
      name: EL
      version: 9
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-rockylinux9-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-rockylinux9-ansible:latest"
      vagrant:
        box: "generic/rocky9"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: rocky-9
        server_type: cx11
  oraclelinux8:
    name: OracleLinux 8
    ci: true
    supported: true
    galaxy:
      name: EL
      version: 8
    molecule:
      docker:
        image: "docker.io/dropveter/oraclelinux8-ansible"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/oraclelinux8-ansible"
      vagrant:
        box: "generic/oracle8"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  oraclelinux9:
    name: OracleLinux 9
    ci: true
    supported: true
    galaxy:
      name: EL
      version: 9
    molecule:
      docker:
        image: "docker.io/dropveter/oraclelinux9-ansible"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/oraclelinux9-ansible"
      vagrant:
        box: "generic/oracle9"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  almalinux8:
    name: AlmaLinux 8
    ci: true
    supported: true
    galaxy:
      name: EL
      version: 8
    molecule:
      docker:
        image: "docker.io/dropveter/almalinux8-ansible"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/almalinux8-ansible"
      vagrant:
        box: "generic/alma8"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  almalinux9:
    name: AlmaLinux 9
    ci: true
    supported: true
    galaxy:
      name: EL
      version: 9
    molecule:
      docker:
        image: "docker.io/dropveter/almalinux9-ansible"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/almalinux9-ansible"
      vagrant:
        box: "generic/alma9"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  sles15:
    name: SUSE Linux Enterprise 15
    ci: false
    supported: true
    galaxy:
      name: opensuse
      version: all
#    molecule:
#      docker:
#        image: "robertdebock/opensuse"
#        pre_build_image: true
#        privileged: true
#        volumes:
#          - /sys/fs/cgroup:/sys/fs/cgroup:rw
#        cgroupns_mode: host
#      podman:
#        image: "docker.io/robertdebock/opensuse"
#      vagrant:
#        box: "generic/opensuse15"
#        interfaces:
#          - network_name: private_network
#            type: dhcp
#            auto_config: true
  opensuse15:
    name: openSUSE Leap 15
    ci: true
    supported: true
    galaxy:
      name: opensuse
      version: all
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-opensuseleap15-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/opensuse15-ansible:latest"
      vagrant:
        box: "generic/opensuse15"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  opensusetumbleweed15:
    name: openSUSE Tumbleweed 15
    ci: false
    supported: false
    galaxy:
      name: opensuse
      version: all
    molecule:
      docker:
        image: "robertdebock/opensuse"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/robertdebock/opensuse"
      vagrant:
        box: "generic/opensuse15"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
  debian10:
    name: Debian 10 (Buster)
    ci: false
    supported: false
    galaxy:
      name: Debian
      version: buster
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-debian10-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-debian10-ansible:latest"
      vagrant:
        box: "generic/debian10"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: debian-10
        server_type: cx11
  debian11:
    name: Debian 11 (Bullseye)
    ci: true
    supported: true
    galaxy:
      name: Debian
      version: bullseye
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-debian11-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-debian11-ansible:latest"
      vagrant:
        box: "generic/debian11"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: debian-11
        server_type: cx11
  debian12:
    name: Debian 12 (Bookworm)
    ci: true
    supported: true
    galaxy:
      name: Debian
      version: bookworm
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-debian12-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-debian12-ansible:latest"
      vagrant:
        box: "debian/bookworm64"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: debian-12
        server_type: cx11
  ubuntu1804:
    name: Ubuntu 18.04 LTS
    ci: false
    supported: false
    galaxy:
      name: Ubuntu
      version: bionic
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-ubuntu1804-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-ubuntu1804-ansible:latest"
      vagrant:
        box: "generic/ubuntu1804"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: ubuntu-18.04
        server_type: cx11
  ubuntu2004:
    name: Ubuntu 20.04 LTS
    ci: true
    supported: true
    galaxy:
      name: Ubuntu
      version: focal
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-ubuntu2004-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-ubuntu2004-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:ro
      vagrant:
        box: "generic/ubuntu2004"
        interfaces:
          - network_name: private_network
            type: dhcp
            auto_config: true
      hetznercloud:
        image: ubuntu-20.04
        server_type: cx11
  ubuntu2204:
    name: Ubuntu 22.04 LTS
    ci: true
    supported: true
    galaxy:
      name: Ubuntu
      version: jammy
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-ubuntu2204-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-ubuntu2204-ansible:latest"
      vagrant:
        box: "generic/ubuntu2204"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: ubuntu-22.04
        server_type: cx11
  ubuntu2404:
    name: Ubuntu 24.04 LTS
    ci: true
    supported: true
    galaxy:
      name: Ubuntu
      version: jammy
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-ubuntu2404-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-ubuntu2404-ansible:latest"
      vagrant:
        box: "generic/ubuntu2404"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: ubuntu-24.04
        server_type: cx11
  fedora37:
    name: Fedora 37
    ci: false
    supported: false
    galaxy:
      name: Fedora
      version: all
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-fedora37-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-fedora37-ansible:latest"
      vagrant:
        box: "generic/fedora37"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: fedora-37
        server_type: cx11
  fedora38:
    name: Fedora 38
    ci: false
    supported: false
    galaxy:
      name: Fedora
      version: all
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-fedora38-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-fedora38-ansible:latest"
      vagrant:
        box: "generic/fedora38"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: fedora-38
        server_type: cx11
  fedora39:
    name: Fedora 39
    ci: false
    supported: false
    galaxy:
      name: Fedora
      version: all
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-fedora39-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-fedora39-ansible:latest"
      vagrant:
        box: "generic/fedora39"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: fedora-39
        server_type: cx11
  fedora40:
    name: Fedora 40
    ci: true
    supported: true
    galaxy:
      name: Fedora
      version: all
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-fedora40-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-fedora40-ansible:latest"
      vagrant:
        box: "generic/fedora40"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: fedora-40
        server_type: cx11
  fedora41:
    name: Fedora 41
    ci: true
    supported: true
    galaxy:
      name: Fedora
      version: all
    molecule:
      docker:
        image: "docker.io/geerlingguy/docker-fedora41-ansible:latest"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/geerlingguy/docker-fedora41-ansible:latest"
      vagrant:
        box: "generic/fedora41"
        interfaces:
          - network_name: private_network
            type: dhcp
      hetznercloud:
        image: fedora-41
        server_type: cx11
  alpine3:
    name: Alpine 3
    ci: false
    supported: false
    galaxy:
      name: Alpine
      version: all
    molecule:
      docker:
        image: "docker.io/dropveter/alpine-python3"
        pre_build_image: true
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
        cgroupns_mode: host
      podman:
        image: "docker.io/dropveter/alpine-python3"
        pre_build_image: false
      vagrant:
        box: "generic/alpine312"
        interfaces:
          - network_name: private_network
            type: dhcp
  docker:
    name: Docker dind (CI only)
    ci: false
    supported: false
    molecule:
      docker:
        image: "docker.io/dropveter/docker-dind-ansible:latest"
        cgroupns_mode: host
        pre_build_image: false
        privileged: true
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:rw
          - certs-ca
          - certs-client
        networks:
          - network
        environment:
          DOCKER_TLS_CERTDIR: /certs
  win2012r2:
    name: Windows Server 2012 R2
    ci: false
    supported: false
    galaxy:
      name: Windows
      version: all
    molecule:
      vagrant:
        box: jborean93/WindowsServer2012R2
        groups:
          - windows
        interfaces:
          - network_name: private_network
            type: dhcp
  win2016:
    name: Windows Server 2016
    ci: false
    supported: false
    galaxy:
      name: Windows
      version: all
    molecule:
      vagrant:
        box: jborean93/WindowsServer2016
        groups:
          - windows
        interfaces:
          - network_name: private_network
            type: dhcp
  win2019:
    name: Windows Server 2019
    ci: false
    supported: false
    galaxy:
      name: Windows
      version: all
    molecule:
      vagrant:
        box: jborean93/WindowsServer2019
        groups:
          - windows
        interfaces:
          - network_name: private_network
            type: dhcp
  win2022:
    name: Windows Server 2022
    ci: false
    supported: false
    galaxy:
      name: Windows
      version: all
    molecule:
      vagrant:
        box: jborean93/WindowsServer2022
        groups:
          - windows
        interfaces:
          - network_name: private_network
            type: dhcp

# List of platform deviations
platforms_overwrite: {}

# Ansible galaxy
galaxy:
  role_name: firewall
  namespace: de_it_krachten
  description: firewall
  author: Mark van Huijstee
  company: De IT Krachten BV
  license: MIT
  min_ansible_version: 2.9
  platforms:
    - name: EL
      versions:
        - 8
        - 9
    - name: Debian
      versions:
        - buster
        - bullseye
    - name: Ubuntu
      versions:
        # - 18.04
        - 20.04
        - 22.04
        - 24.04
    - name: Fedora
      versions:
        - all
  dependencies: []

# Github
github:
  active: true
  molecule: true
  self_hosted: false
  fail_fast: false
  parallel: true
  owner: de-it-krachten
  repo: ansible-role-firewall
  # https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html
  lint_matrix:
    - name: ansible_2.15
      ansible: "ansible>8,<9"
      ansible_core: "ansible-core>2.15,<2.16"
      ansible_lint: "ansible-lint"
    - name: ansible_2.16
      ansible: "ansible>9,<10"
      ansible_core: "ansible-core>2.16,<2.17"
      ansible_lint: "ansible-lint"

# Gitlab
gitlab:
  active: false

# Axure DevOps
ado:
  active: false

# molecule
molecule:
  active: true
  dns_server: false
  drivers:
    - docker
    - vagrant
    - hetznercloud
    - podman
  driver: docker
  ansible:
   verbosity: 0
  converge:
    playbooks: []
    vars: {}
  prepare:
    playbooks: []
    vars:
      systemctl_alternative: false
  requirements:
    roles:
      - deitkrachten.docker
      - deitkrachten.epel
      - deitkrachten.facts
      - deitkrachten.firewall
      - deitkrachten.firewalld
      - deitkrachten.hosts
      - deitkrachten.iptables
      - deitkrachten.python
      - deitkrachten.reboot
      - deitkrachten.showinfo
      - deitkrachten.ufw
      - deitkrachten.unbound
  nodes:
    - name: node1
      groups: []
  group_vars:
    linux:
      ansible_user: vagrant
      ansible_password: vagrant
    windows:
      ansible_user: vagrant
      ansible_password: vagrant
      ansible_become_user: vagrant
      ansible_become_method: runas
      ansible_connection: ssh
      ansible_shell_type: cmd

# templates
ci_templates:
  meta-main.yml:
    src: galaxy/templates/meta-main.yml
    dest: meta/main.yml
  meta-requirements.yml:
    src: galaxy/templates/meta-requirements.yml
    dest: meta/requirements.yml
  yamllint:
    src: yamllint/templates/yamllint
    dest: .yamllint
  ci.yml:
    src: github/templates/ci.yml
    dest: .github/workflows/ci.yml
    when: github_runner_cloud
  ci-self-hosted.yml:
    src: github/templates/ci-self-hosted.yml
    dest: .github/workflows/ci.yml
    when: github_runner_self_hosted
  release.yml:
    src: github/templates/release.yml
    dest: .github/workflows/release.yml
    when: github_runner_cloud
  releaserc.yml:
    src: github/templates/releaserc.yml
    dest: .releaserc.yml
    when: github_runner_cloud
  gitlab-ci.yml:
    src: gitlab/templates/gitlab-ci.yml
    dest: .gitlab-ci.yml
    when: gitlab_active
  azure-pipelines.yml:
    src: ado/templates/azure-pipelines.yml
    dest: azure-pipelines.yml
    when: ado_active
  prepare.yml:
    src: molecule/templates/prepare.yml
    dest: molecule/default/prepare.yml
    when: molecule_active
#  molecule.yml.j2:
#    src: molecule/templates/molecule.yml.j2
#    dest: molecule/default/molecule.yml.j2
#    when: molecule_active
  molecule-docker.yml.j2:
    src: molecule/templates/molecule-docker.yml.j2
    dest: molecule/default/molecule-docker.yml.j2
    when: molecule_active
  molecule-hetznercloud.yml.j2:
    src: molecule/templates/molecule-hetznercloud.yml.j2
    dest: molecule/default/molecule-hetznercloud.yml.j2
    when: molecule_active
  molecule-podman.yml.j2:
    src: molecule/templates/molecule-podman.yml.j2
    dest: molecule/default/molecule-podman.yml.j2
    when: molecule_active
  molecule-vagrant.yml.j2:
    src: molecule/templates/molecule-vagrant.yml.j2
    dest: molecule/default/molecule-vagrant.yml.j2
    when: molecule_active
  molecule-test.yml:
    src: molecule/templates/molecule-test.yml
    dest: molecule/default/molecule-test.yml
    when: molecule_active
  converge.yml:
    src: molecule/templates/converge.yml
    dest: molecule/default/converge.yml
    when: molecule_active
  verify.yml:
    src: molecule/templates/verify.yml
    dest: molecule/default/verify.yml
    force: false
    when: molecule_active
#  requirements.tmpl:
#    src: molecule/templates/requirements.tmpl
#    dest: molecule/default/requirements.tmpl
#    when: molecule_active
  requirements.yml:
    src: molecule/templates/requirements.yml
    dest: molecule/default/requirements.yml
    when: molecule_active
  gitignore:
    src: git/templates/gitignore
    dest: .gitignore
    force: false
  ansible-lint:
    src: ansible-lint/templates/ansible-lint
    dest: .ansible-lint
    # force: no
#  molecule-platforms.yml:
#    src: molecule/templates/molecule-platforms.yml
#    dest: .molecule-platforms.yml
#    force: true
  molecule-platforms-docker.yml:
    src: molecule/templates/molecule-platforms-docker.yml
    dest: molecule/default/.molecule-platforms-docker.yml
    force: true
  molecule-platforms-hetznercloud.yml:
    src: molecule/templates/molecule-platforms-hetznercloud.yml
    dest: molecule/default/.molecule-platforms-hetznercloud.yml
    force: true
  molecule-platforms-podman.yml:
    src: molecule/templates/molecule-platforms-podman.yml
    dest: molecule/default/.molecule-platforms-podman.yml
    force: true
  molecule-platforms-vagrant.yml:
    src: molecule/templates/molecule-platforms-vagrant.yml
    dest: molecule/default/.molecule-platforms-vagrant.yml
    force: true

# Ansible-lint
ansible_lint:
  exclude_paths:
    - molecule/
  skip_list: []
