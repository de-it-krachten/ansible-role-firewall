---

name: CI

on:
  pull_request:
  push:
    branches-ignore:
      - master
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

defaults:
  run:
    working-directory: "de-it-krachten/ansible-role-firewall"


jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: "${{ github.repository }}"

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'


      - name: Show runner info
        run: |
          hostname -f

      - name: disable apparmor for mysql
        run: sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/

      - name: parse apparmor for mysql
        run: sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Install test dependencies.
        run: pip3 install ansible ansible-lint==5.4.0 yamllint jmespath e2j2 yq

      - name: Lint code.
        run: |
          set -e
          yamllint .
          ansible-lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    # continue-on-error: ${{ matrix.continue_on_error }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: centos7
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: centos8
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: rockylinux8
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: oraclelinux8
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: almalinux8
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: almalinux9
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: debian10
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: debian11
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: ubuntu1804
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: ubuntu2004
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: ubuntu2204
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: fedora35
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true
          - distro: fedora36
            playbook: converge.yml
            # continue_on_error: false
            # failfast: true

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: "${{ github.repository }}"

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'


      - name: Show runner info
        run: |
          hostname -f

      - name: disable apparmor for mysql
        run: sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/

      - name: parse apparmor for mysql
        run: sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Install test dependencies.
        run: pip3 install ansible ansible-lint==5.4.0 molecule[docker] docker yamllint jmespath e2j2 yq

      - name: Set-up github runner
        run: |
          sudo modprobe ip6table_filter

      - name: Retrieve wrapper molecule scripts
        run: |
          set -e
          sudo apt install curl
          sudo curl -s -o /usr/local/bin/ansible-galaxy.sh \
            https://raw.githubusercontent.com/de-it-krachten/ansible-role-molecule/dev/files/ansible-galaxy.sh
          sudo curl -s -o /usr/local/bin/ansible-requirements-clean.sh \
            https://raw.githubusercontent.com/de-it-krachten/ansible-role-molecule/dev/files/ansible-requirements-clean.sh
          sudo curl -s -o /usr/local/bin/molecule-test.sh \
            https://raw.githubusercontent.com/de-it-krachten/ansible-role-molecule/dev/files/molecule-test.sh
          sudo chmod 755 /usr/local/bin/ansible-galaxy.sh
          sudo chmod 755 /usr/local/bin/ansible-requirements-clean.sh
          sudo chmod 755 /usr/local/bin/molecule-test.sh

      - name: Run Molecule tests.
        run: molecule-test.sh
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_PLAYBOOK: ${{ matrix.playbook }}

