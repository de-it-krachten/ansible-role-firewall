---

- name: Prepare
  hosts: all
  become: yes
  vars:

    proxy_use: "{{ True if ( https_proxy is defined and https_proxy|length > 0 ) else False }}"
    https_proxy: "{{ lookup('env', 'HTTPS_PROXY') | default('') }}"
    http_proxy: "{{ lookup('env', 'HTTP_PROXY') | default('') }}"
    no_proxy: "{{ lookup('env', 'NO_PROXY') | default('127.0.0.1,localhost') }}"
    molecule_driver: "{{ lookup('env', 'MOLECULE_DRIVER_NAME') }}"

    iptables_distros:
      - rhel7
      - centos6
      - centos7
      - alpine3

    ufw_distros:
      - debian10
      - debian11
      - debian12
      - ubuntu1804
      - ubuntu2004
      - ubuntu2204

    firewalld_distros:
      - rhel8
      - rhel9
      - fedora36
      - fedora37
      - fedora38
      - centos8
      - centos8s
      - centos9s
      - oraclelinux8
      - oraclelinux9
      - rocky8
      - rocky9
      - almalinux8
      - almalinux9
      - sles15
      - opensuse15

    systemctl_alternative: False
    prepare_firewall: True
  roles:
    - deitkrachten.facts
    - deitkrachten.showinfo
  tasks:

    - name: Create remote_tmp
      ansible.builtin.file:
        path: /root/.ansible/tmp
        state: directory
        mode: "0700"

    - name: Define molecule distro  # noqa jinja[spacing]
      ansible.builtin.set_fact:
        molecule_distro: >-
          {%- if ansible_distribution == 'Ubuntu' -%}
          {{ (ansible_distribution | lower) + (ansible_distribution_version | regex_replace('\.')) }}
          {%- elif ansible_distribution == 'openSUSE Leap' -%}
          {{ 'opensuse' + ansible_distribution_major_version }}
          {%- elif ansible_distribution == 'CentOS' and ansible_distribution_release == 'Stream' -%}
          {{ (ansible_distribution | lower) + ansible_distribution_major_version + 's' }}
          {%- else -%}
          {{ (ansible_distribution | lower) + ansible_distribution_major_version }}
          {%- endif -%}

    - name: Show settings
      ansible.builtin.debug:
        msg:
          molecule_distro: "{{ molecule_distro }}"
          molecule_driver: "{{ molecule_driver }}"
          proxy_use: "{{ proxy_use }}"
          https_proxy: "{{ https_proxy }}"
          http_proxy: "{{ http_proxy }}"
          no_proxy: "{{ no_proxy }}"
          prepare_firewall: "{{ prepare_firewall | default(False) }}"
          register_hosts: "{{ register_hosts | default(False) }}"
          update_all: "{{ update_all | default(False) }}"
          activate_epel: "{{ activate_epel | default(False) }}"
          install_python: "{{ install_python | default(False) }}"

    - name: Enable root access
      when:
        - molecule_driver is search('^(hetznercloud|vagrant)$')
        - enable_root_access is defined and enable_root_access | bool
        - root_pubkey is defined and root_pubkey | length > 0
      block:

        - name: Create /root/.ssh
          ansible.builtin.file:
            path: /root/.ssh
            state: directory
            owner: root
            group: root
            mode: "0700"

        - name: Setup pubkey authentication for root
          ansible.posix.authorized_key:
            user: root
            state: present
            key: "{{ root_pubkey }}"

    - name: Generic
      block:

        - name: Remove packages known to make CI fail
          ansible.builtin.package:
            name: "{{ packages_rm | default([]) }}"
            state: absent

    - name: Family Suse
      when: ansible_os_family == 'Suse'
      block:

        - name: Configure to use proxy  # noqa template-instead-of-copy
          ansible.builtin.copy:
            content: |
              PROXY_ENABLED="yes"
              HTTP_PROXY="{{ http_proxy }}"
              HTTPS_PROXY="{{ http_proxy }}"
              NO_PROXY="localhost, 127.0.0.1"
            dest: /etc/sysconfig/proxy
            owner: root
            group: root
            mode: "0644"
          when: proxy_use is defined and proxy_use | bool

        - name: Update zypper cache
          community.general.zypper:
            name: zypper
            update_cache: true

        - name: Update all packages
          community.general.zypper:
            name: '*'
            state: latest
          when: update_all is defined and update_all | bool

        - name: Remove conflicting packages
          ansible.builtin.package:
            name:
              - busybox-tar
            state: absent

        - name: Install default packages
          ansible.builtin.package:
            name:
              - lsb
              - iproute
              - python-xml
              - python3-xml
              - python3-rpm
              - unzip
              - tar
            state: present

    - name: Family Debian
      when: ansible_os_family == 'Debian'
      block:

        - name: Configure APT to use proxy  # noqa template-instead-of-copy
          ansible.builtin.copy:
            content: |
              Acquire::http::proxy "{{ http_proxy }}/";
              Acquire::https::proxy "{{ https_proxy }}/";
              Acquire::gtp::proxy "{{ https_proxy }}/";
            dest: /etc/apt/apt.conf.d/80proxy
            owner: root
            group: root
            mode: "0644"
          when: proxy_use is defined and proxy_use | bool

        - name: Update APT cache
          ansible.builtin.apt:
            update_cache: yes
            cache_valid_time: 0

        - name: Upgrade APT packages
          ansible.builtin.apt:
            force_apt_get: yes
            upgrade: yes
          when: update_all is defined and update_all | bool

        - name: Install default packages
          ansible.builtin.package:
            name:
              - lsb-release
              - netbase
              - gnupg
              - ssh
              - python3-apt
            state: present

    - name: Family RedHat (generic)
      when:
        - ansible_os_family == 'RedHat'
      block:

        # Switch to CentOS vault mirrors
        - name: Get all repo files
          ansible.builtin.find:
            paths: /etc/yum.repos.d
            patterns: 'CentOS-*'
          register: _repo
          when: molecule_distro is search('^centos(6|8)$')

        - name: Update repo files to point to CentOS vault mirror (1)
          ansible.builtin.replace:
            path: "{{ item.path }}"
            regexp: "^mirrorlist"
            replace: "#mirrorlist"
          loop: "{{ _repo.files }}"
          loop_control:
            label: "{{ item.path }}"
          when: molecule_distro is search('^centos(6|8)$')

        - name: Update repo files to point to CentOS vault mirror (2)
          ansible.builtin.replace:
            path: "{{ item.path }}"
            regexp: "^#baseurl=http://mirror.centos.org"
            replace: "baseurl=http://vault.centos.org"
          loop: "{{ _repo.files }}"
          loop_control:
            label: "{{ item.path }}"
          when: molecule_distro is search('^centos(6|8)$')

        # Switch to CentOS epel mirrors
        - name: Switch to CentOS epel mirrors
          ansible.builtin.replace:
            path: "/etc/yum.repos.d/epel.repo"
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
          loop:
            - regexp: "^mirrorlist="
              replace: "#mirrorlist="
            - regexp: "^#baseurl=http://download.fedoraproject.org/pub/epel"
              replace: "baseurl=https://archives.fedoraproject.org/pub/archive/epel"
          loop_control:
            label: /etc/yum.repos.d/epel.repo
          when: molecule_distro is search('^centos6$')

    - name: Family RedHat < 8
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version | int < 8
      block:

        - name: Configure YUM to use proxy
          ansible.builtin.lineinfile:
            path: /etc/yum.conf
            line: "proxy={{ https_proxy }}"
            regexp: "^proxy=.*$"
          when: proxy_use is defined and proxy_use | bool

        - name: Update YUM cache  # noqa command-instead-of-module
          ansible.builtin.command: yum makecache
          changed_when: false
          # args:
          #   warn: false

        - name: Upgrade YUM packages  # noqa package-latest
          ansible.builtin.yum:
            name: '*'
            state: latest
          when: update_all is defined and update_all | bool

        - name: Install default packages
          ansible.builtin.package:
            name:
              - openssh-server
              - openssh-clients
              - iproute
            state: present

        - name: Install extra packages
          ansible.builtin.package:
            name:
              - hostname
            state: present
          when: ansible_distribution_major_version | int == 7

        - name: Activate epel repository
          ansible.builtin.include_role:
            name: deitkrachten.epel
          when: activate_epel is defined and activate_epel | bool


    - name: Family RedHat 8+
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version | int >= 8
      block:

        - name: Configure DNF to use proxy
          ansible.builtin.lineinfile:
            path: /etc/dnf/dnf.conf
            line: "proxy={{ https_proxy }}"
            regexp: "^proxy=.*$"
          when: proxy_use is defined and proxy_use | bool

        - name: Update DNF cache
          ansible.builtin.dnf:
            update_cache: yes

        - name: Upgrade DNF packages  # noqa package-latest
          ansible.builtin.dnf:
            name: '*'
            state: latest
          when: update_all is defined and update_all | bool

        - name: Replace minimal packages
          ansible.builtin.dnf:
            name: "{{ item }}"
            state: present
            allowerasing: true
          loop:
            - curl
            - coreutils

        - name: Install default packages
          ansible.builtin.package:
            name:
              - hostname
              - openssh-server
              - openssh-clients
              - iproute
            state: present

        - name: Activate epel repository
          ansible.builtin.include_role:
            name: deitkrachten.epel
          when:
            - activate_epel is defined
            - activate_epel | bool
            - ansible_distribution != 'Fedora'

    - name: Install python
      ansible.builtin.include_role:
        name: deitkrachten.python
      vars:
        python38: "{{ install_python38 | default(False) }}"
        python_package_install_optional: "{{ install_python_optional | default(True) }}"
      when: install_python is defined and install_python | bool

    - name: Firewall
      when:
        - prepare_firewall is defined and prepare_firewall | bool
        - inventory_hostname is not search('-dns$')
      block:

        - name: Install iptables
          ansible.builtin.include_role:
            name: deitkrachten.iptables
          when: molecule_distro in iptables_distros

        - name: Install ufw
          ansible.builtin.include_role:
            name: deitkrachten.ufw
          when: molecule_distro in ufw_distros

        - name: Install firewalld
          ansible.builtin.include_role:
            name: deitkrachten.firewalld
          when: molecule_distro in firewalld_distros

    - name: Install docker
      ansible.builtin.include_role:
        name: deitkrachten.docker
      when: install_docker is defined and install_docker | bool

    - name: Reboot the server
      ansible.builtin.include_role:
        name: deitkrachten.reboot
      when: molecule_driver is search('^(vagrant|hetznercloud)$')

    - name: Re-run setup
      ansible.builtin.setup:

    - name: Localhosts
      when: register_hosts is defined and register_hosts | bool
      block:

        - name: Register all nodes in /etc/hosts
          ansible.builtin.include_role:
            name: deitkrachten.hosts
          vars:
            hosts_mode: hosts
            hosts_adapter: "{{ 'eth1' if molecule_driver == 'vagrant' else 'default' }}"

