---

dependency:
  name: galaxy
driver:
  name: vagrant
lint: |
  set -e
  yamllint .
  ln -fs molecule/default/requirements.yml
  ansible-lint
  rm -f requirements.yml
platforms:
{% for platform in MOLECULE_DISTROS %}
  - name: firewall-{{ platform.name }}-node1
    box: "{{ platform.box }}"
    memory: {{ platform.memory | default(2048) }}
    cpus: {{ platform.cpus | default(2) }}
{% if platform.interfaces is defined %}
    interfaces: {{ platform.interfaces }}
{% endif %}
{% if platform.provider is defined %}
    provider: {{ platform.provider }}
{% endif %}
{% if platform.provider_options is defined %}
    provider_options: {{ platform.provider_options }}
{% endif %}
{% if platform.provider_raw_config_args is defined %}
    provider_raw_config_args: {{ platform.provider_raw_config_args }}
{% endif %}
{% if platform.instance_raw_config_args is defined %}
    instance_raw_config_args: {{ platform.instance_raw_config_args }}
{% endif %}
{% if not platform.name | regex_search('win2') %}
    config_options:
      ssh.keep_alive: yes
      ssh.remote_user: "'vagrant'"
{% endif %}
    groups:
{% if platform.groups is undefined or platform.groups | length == 0 %}
{% set __platform_groups = [ 'linux' ] %}
{% else %}
{% set __platform_groups = platform.groups %}
{% endif %}
{% for group in __platform_groups %}
      - {{ group }}
{% endfor %}
{% endfor %}
provisioner:
  name: ansible
{% if MOLECULE_ANSIBLE_ARGS is defined %}
  ansible_args:
{% for molecule_ansible_arg in MOLECULE_ANSIBLE_ARGS %}
    - {{ molecule_ansible_arg }}
{% endfor %}
{% endif %}
  env:
    ANSIBLE_PIPELINING: "True"
    ANSIBLE_VERBOSITY: 0
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    group_vars: {"linux": {"ansible_user": "vagrant", "ansible_password": "vagrant"}, "windows": {"ansible_user": "vagrant", "ansible_password": "vagrant", "ansible_become_user": "vagrant", "ansible_become_method": "runas", "ansible_connection": "ssh", "ansible_shell_type": "cmd"}}
    host_vars: {}
scenario:
  name: default
verifier:
  name: ansible
